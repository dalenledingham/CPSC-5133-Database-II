1.1. List the rooms that are occupied, along with the associated patient names and the date the patient was admitted.
-- SELECT (roomNum, patient, admitDate) FROM Rooms WHERE isOccupied = 'Y';

1.2. List the rooms that are currently unoccupied.
-- SELECT (roomNum) FROM Rooms WHERE isOccupied = 'Y';

1.3. List all rooms in the hospital along with patient names and admission dates for those that are occupied.
-- SELECT * FROM Rooms;



2.1. List all patients in the database, with full personal information.
-- SELECT * FROM Persons WHERE personType = 'P';

2.2. List all patients currently admitted to the hospital. List only patient identification number and name.
-- SELECT (pID, firstName, lastName) FROM Persons WHERE dischargeDate is NULL;

2.3. List all patients who were discharged in a given date range. List only patient identification number and name.
-- SELECT * FROM Persons WHERE disghargeDate BETWEEN input AND input;

2.4. List all patients who were admitted within a given date range. List only patient identification number and name.
-- SELECT * FROM Persons WHERE admitDate BETWEEN input AND input;

2.5. For a given patient (either patient identification number or name), list all admissions to the hospital along with the diagnosis for each admission.
-- SELECT * FROM Persons WHERE lastName = input;

2.6. For a given patient (either patient identification number or name), list all treatments that were administered. Group treatments by admissions. List admissions in descending chronological order, and list treatments in ascending chronological order within each admission.
-- SELECT (treatment) FROM PatientTreatments WHERE patient = input
-- ORDER BY administerTime ASC;

2.7. List patients who were admitted to the hospital within 30 days of their last discharge date. For each patient list their patient identification number, name, diagnosis, and admitting doctor.
-- 

2.8. For each patient that has ever been admitted to the hospital, list their total number of admissions, average duration of each admission, longest span between admissions, shortest span between admissions, and average span between admissions.
-- 



3.1. List the diagnoses given to patients, in descending order of occurrences. List diagnosis identification number, name, and total occurrences of each diagnosis.
-- SELECT d.dID, d.diagnosisName, COUNT(p.initialDiagnosis) FROM Diagnoses d, Persons p
-- GROUP BY d.diagnosisName
-- ORDER BY COUNT(p.initialDiagnosis) DESC;

3.2. List the diagnoses given to hospital patients, in descending order of occurrences. List diagnosis identification number, name, and total occurrences of each diagnosis.
-- // this query is the same as 3.1, skip this queryDFJK

3.3. List the treatments performed on admitted patients, in descending order of occurrences. List treatment identification number, name, and total number of occurrences of each treatment.
-- SELECT t.tID, t.treatmentName, COUNT(pt.treatment) FROM Treatments t, PatientTreatments pt
-- GROUP BY t.treatmentName
-- ORDER BY COUNT(pt.treatment) DESC;

3.4. List the diagnoses associated with patients who have the highest occurrences of admissions to the hospital, in ascending order or correlation.
-- 

3.5. For a given treatment occurrence, list the patient name and the doctor who ordered the treatment.
-- SELECT (patient, orderingDoctor) FROM PatientTreatments;



4.1. List all workers at the hospital, in ascending last name, first name order. For each worker, list their, name, and job category.
-- SELECT * FROM Persons WHERE personType <> 'P'
-- ORDER BY lastName COLLATE NOCASE ASC;

4.2. List the primary doctors of patients with a high admission rate (at least 4 admissions within a one-year time frame).
-- 

4.3. For a given doctor, list all associated diagnoses in descending order of occurrence. For each diagnosis, list the total number of occurrences for the given doctor.
-- SELECT DISTINCT initialDiagnosis, COUNT(initialDiagnosis) FROM Persons WHERE primaryDoctor = input, initialDiagnosis = Diagnoses.dID;

4.4. For a given doctor, list all treatments that they ordered in descending order of occurrence. For each treatment, list the total number of occurrences for the given doctor.
-- SELECT DISTICT treatment, COUNT(treatment) FROM PatientTreatments WHERE orderingDoctor = input, treatment = Treatments.tID;

4.5. List employees who have been involved in the treatment of every admitted patient.
-- SELECT (patient, doctor) WHERE currentlyAdmitted = 'Y';
